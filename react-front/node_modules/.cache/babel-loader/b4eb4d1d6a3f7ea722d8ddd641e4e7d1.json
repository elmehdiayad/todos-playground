{"ast":null,"code":"const initialTodos = [// {\n  //   id: 0,\n  //   title: \"ETQDev, je veux initialiser le projet à l'aide de create-react-app\",\n  //   description:\n  //     \"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium,totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta .\",\n  //   completed: false,\n  //   deleted: false,\n  // },\n  // {\n  //   id: 1,\n  //   title: \"ETQDev, je veux initialiser le projet à l'aide de create-react-app\",\n  //   description:\n  //     \"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium,totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta .\",\n  //   completed: false,\n  //   deleted: false,\n  // },\n  // {\n  //   id: 2,\n  //   title: \"ETQDev, je veux initialiser le projet à l'aide de create-react-app\",\n  //   description:\n  //     \"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium,totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta .\",\n  //   completed: false,\n  //   deleted: true,\n  // },\n];\n\nconst nextTodoId = todos => {\n  const maxId = todos.reduce((maxId, todo) => Math.max(todo.id, maxId), -1);\n  return maxId + 1;\n};\n\nconst todosReducer = (state = initialTodos, action) => {\n  switch (action.type) {\n    case \"todos/getTodos\":\n      {\n        return action.payload.todos;\n      }\n\n    case \"todos/error\":\n      {\n        //TODO: handle errors\n        return state;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport default todosReducer;","map":{"version":3,"sources":["C:/Users/ayad/Desktop/NW/todo-app/react-front/src/components/todos/todos.slice.tsx"],"names":["initialTodos","nextTodoId","todos","maxId","reduce","todo","Math","max","id","todosReducer","state","action","type","payload"],"mappings":"AAOA,MAAMA,YAAyB,GAAG,CAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAxBgC,CAAlC;;AA2BA,MAAMC,UAAU,GAAIC,KAAD,IAAqC;AACtD,QAAMC,KAAK,GAAGD,KAAK,CAACE,MAAN,CAAa,CAACD,KAAD,EAAQE,IAAR,KAAiBC,IAAI,CAACC,GAAL,CAASF,IAAI,CAACG,EAAd,EAAkBL,KAAlB,CAA9B,EAAwD,CAAC,CAAzD,CAAd;AACA,SAAOA,KAAK,GAAG,CAAf;AACD,CAHD;;AAKA,MAAMM,YAAY,GAAG,CAACC,KAAK,GAAGV,YAAT,EAAuBW,MAAvB,KAA8C;AACjE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,gBAAL;AAAuB;AACrB,eAAOD,MAAM,CAACE,OAAP,CAAeX,KAAtB;AACD;;AACD,SAAK,aAAL;AAAoB;AAClB;AACA,eAAOQ,KAAP;AACD;;AACD;AACE,aAAOA,KAAP;AATJ;AAWD,CAZD;;AAcA,eAAeD,YAAf","sourcesContent":["import { TodoProps } from \"../common/todo/todo\";\r\n\r\nexport interface TodoAction {\r\n  type: string;\r\n  payload: any;\r\n}\r\n\r\nconst initialTodos: TodoProps[] = [\r\n  // {\r\n  //   id: 0,\r\n  //   title: \"ETQDev, je veux initialiser le projet à l'aide de create-react-app\",\r\n  //   description:\r\n  //     \"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium,totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta .\",\r\n  //   completed: false,\r\n  //   deleted: false,\r\n  // },\r\n  // {\r\n  //   id: 1,\r\n  //   title: \"ETQDev, je veux initialiser le projet à l'aide de create-react-app\",\r\n  //   description:\r\n  //     \"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium,totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta .\",\r\n  //   completed: false,\r\n  //   deleted: false,\r\n  // },\r\n  // {\r\n  //   id: 2,\r\n  //   title: \"ETQDev, je veux initialiser le projet à l'aide de create-react-app\",\r\n  //   description:\r\n  //     \"Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium,totam rem aperiam, eaque ipsa quae ab illo inventore veritatis et quasi architecto beatae vitae dicta .\",\r\n  //   completed: false,\r\n  //   deleted: true,\r\n  // },\r\n];\r\n\r\nconst nextTodoId = (todos: Array<TodoProps>): number => {\r\n  const maxId = todos.reduce((maxId, todo) => Math.max(todo.id, maxId), -1);\r\n  return maxId + 1;\r\n};\r\n\r\nconst todosReducer = (state = initialTodos, action: TodoAction) => {\r\n  switch (action.type) {\r\n    case \"todos/getTodos\": {\r\n      return action.payload.todos;\r\n    }\r\n    case \"todos/error\": {\r\n      //TODO: handle errors\r\n      return state;\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default todosReducer;\r\n"]},"metadata":{},"sourceType":"module"}