{"ast":null,"code":"import { takeLatest, call, put } from \"redux-saga/effects\";\nimport { all, completeTodo, newTodo, archiveTodo } from \"./api-calls\";\nexport function* watcherSaga() {\n  yield takeLatest(\"todos/fetchAll\", fetchAll);\n  yield takeLatest(\"todos/add\", add);\n  yield takeLatest(\"todos/complete\", complete);\n  yield takeLatest(\"todos/archive\", archive);\n}\n\nfunction* fetchAll() {\n  try {\n    const response = yield call(all);\n    const todos = response.data;\n    yield put({\n      type: \"todos/getTodos\",\n      payload: {\n        todos\n      }\n    });\n  } catch (error) {\n    console.log(error);\n    yield put({\n      type: \"todos/error\",\n      error\n    });\n  }\n}\n\nfunction* add(action) {\n  try {\n    yield call(newTodo, action);\n    yield put({\n      type: \"todos/fetchAll\"\n    });\n  } catch (error) {\n    console.log(error);\n    yield put({\n      type: \"todos/error\",\n      error\n    });\n  }\n}\n\nfunction* complete(action) {\n  try {\n    yield call(completeTodo, action);\n    yield put({\n      type: \"todos/fetchAll\"\n    });\n  } catch (error) {\n    console.log(error);\n    yield put({\n      type: \"todos/error\",\n      error\n    });\n  }\n}\n\nfunction* archive(action) {\n  try {\n    yield call(archiveTodo, action);\n    yield put({\n      type: \"todos/fetchAll\"\n    });\n  } catch (error) {\n    console.log(error);\n    yield put({\n      type: \"todos/error\",\n      error\n    });\n  }\n}","map":{"version":3,"sources":["C:/Users/ayad/Desktop/NW/todo-app/react-front/src/sagas.tsx"],"names":["takeLatest","call","put","all","completeTodo","newTodo","archiveTodo","watcherSaga","fetchAll","add","complete","archive","response","todos","data","type","payload","error","console","log","action"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AACA,SAASC,GAAT,EAAcC,YAAd,EAA4BC,OAA5B,EAAqCC,WAArC,QAAwD,aAAxD;AAGA,OAAO,UAAUC,WAAV,GAAwB;AAC7B,QAAMP,UAAU,CAAC,gBAAD,EAAmBQ,QAAnB,CAAhB;AACA,QAAMR,UAAU,CAAC,WAAD,EAAcS,GAAd,CAAhB;AACA,QAAMT,UAAU,CAAC,gBAAD,EAAmBU,QAAnB,CAAhB;AACA,QAAMV,UAAU,CAAC,eAAD,EAAkBW,OAAlB,CAAhB;AACD;;AAED,UAAUH,QAAV,GAAqB;AACnB,MAAI;AACF,UAAMI,QAAQ,GAAG,MAAMX,IAAI,CAACE,GAAD,CAA3B;AACA,UAAMU,KAAK,GAAGD,QAAQ,CAACE,IAAvB;AACA,UAAMZ,GAAG,CAAC;AAAEa,MAAAA,IAAI,EAAE,gBAAR;AAA0BC,MAAAA,OAAO,EAAE;AAAEH,QAAAA;AAAF;AAAnC,KAAD,CAAT;AACD,GAJD,CAIE,OAAOI,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,UAAMf,GAAG,CAAC;AAAEa,MAAAA,IAAI,EAAE,aAAR;AAAuBE,MAAAA;AAAvB,KAAD,CAAT;AACD;AACF;;AAED,UAAUR,GAAV,CAAcW,MAAd,EAAkC;AAChC,MAAI;AACF,UAAMnB,IAAI,CAACI,OAAD,EAAUe,MAAV,CAAV;AACA,UAAMlB,GAAG,CAAC;AAAEa,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAT;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,UAAMf,GAAG,CAAC;AAAEa,MAAAA,IAAI,EAAE,aAAR;AAAuBE,MAAAA;AAAvB,KAAD,CAAT;AACD;AACF;;AAED,UAAUP,QAAV,CAAmBU,MAAnB,EAAuC;AACrC,MAAI;AACF,UAAMnB,IAAI,CAACG,YAAD,EAAegB,MAAf,CAAV;AACA,UAAMlB,GAAG,CAAC;AAAEa,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAT;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,UAAMf,GAAG,CAAC;AAAEa,MAAAA,IAAI,EAAE,aAAR;AAAuBE,MAAAA;AAAvB,KAAD,CAAT;AACD;AACF;;AAED,UAAUN,OAAV,CAAkBS,MAAlB,EAAsC;AACpC,MAAI;AACF,UAAMnB,IAAI,CAACK,WAAD,EAAcc,MAAd,CAAV;AACA,UAAMlB,GAAG,CAAC;AAAEa,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAT;AACD,GAHD,CAGE,OAAOE,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ;AACA,UAAMf,GAAG,CAAC;AAAEa,MAAAA,IAAI,EAAE,aAAR;AAAuBE,MAAAA;AAAvB,KAAD,CAAT;AACD;AACF","sourcesContent":["import { takeLatest, call, put } from \"redux-saga/effects\";\r\nimport { all, completeTodo, newTodo, archiveTodo } from \"./api-calls\";\r\nimport { TodoAction } from \"./components/todos/todos.slice\";\r\n\r\nexport function* watcherSaga() {\r\n  yield takeLatest(\"todos/fetchAll\", fetchAll);\r\n  yield takeLatest(\"todos/add\", add);\r\n  yield takeLatest(\"todos/complete\", complete);\r\n  yield takeLatest(\"todos/archive\", archive);\r\n}\r\n\r\nfunction* fetchAll() {\r\n  try {\r\n    const response = yield call(all);\r\n    const todos = response.data;\r\n    yield put({ type: \"todos/getTodos\", payload: { todos } });\r\n  } catch (error) {\r\n    console.log(error);\r\n    yield put({ type: \"todos/error\", error });\r\n  }\r\n}\r\n\r\nfunction* add(action: TodoAction) {\r\n  try {\r\n    yield call(newTodo, action);\r\n    yield put({ type: \"todos/fetchAll\" });\r\n  } catch (error) {\r\n    console.log(error);\r\n    yield put({ type: \"todos/error\", error });\r\n  }\r\n}\r\n\r\nfunction* complete(action: TodoAction) {\r\n  try {\r\n    yield call(completeTodo, action);\r\n    yield put({ type: \"todos/fetchAll\" });\r\n  } catch (error) {\r\n    console.log(error);\r\n    yield put({ type: \"todos/error\", error });\r\n  }\r\n}\r\n\r\nfunction* archive(action: TodoAction) {\r\n  try {\r\n    yield call(archiveTodo, action);\r\n    yield put({ type: \"todos/fetchAll\" });\r\n  } catch (error) {\r\n    console.log(error);\r\n    yield put({ type: \"todos/error\", error });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}