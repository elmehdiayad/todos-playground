{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\ayad\\\\Desktop\\\\NW\\\\todo-app\\\\react-front\\\\src\\\\components\\\\home\\\\form.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport Styles from \"./home.styles\";\nimport AddIcon from \"../../assets/images/add.svg\";\nimport { useDispatch } from \"react-redux\";\n\nconst TodoForm = () => {\n  _s();\n\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const dispatch = useDispatch();\n\n  const onChange = event => {\n    event.currentTarget.name === \"title\" ? setTitle(event.currentTarget.value) : setDescription(event.currentTarget.value);\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n    dispatch({\n      type: \"todos/todoAdded\",\n      payload: {\n        title,\n        description\n      }\n    });\n    setTitle(\"\");\n    setDescription(\"\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Styles.Form.Container, {\n    method: \"post\",\n    onSubmit: event => onSubmit(event),\n    children: [/*#__PURE__*/_jsxDEV(Styles.Form.TitleInput, {\n      name: \"title\",\n      placeholder: \"Title\",\n      value: title,\n      required: true,\n      onChange: event => onChange(event)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Styles.Form.DescriptionInput, {\n      name: \"description\",\n      placeholder: \"Description\",\n      value: description,\n      onChange: event => onChange(event)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Styles.Form.Button, {\n      type: \"submit\",\n      children: [/*#__PURE__*/_jsxDEV(Styles.Form.Icon, {\n        src: AddIcon,\n        alt: \"Ajouter\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), \"Ajouter\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n\n_s(TodoForm, \"t5/bnlyk7vJy/fZ+aDmHPUNv/9w=\", false, function () {\n  return [useDispatch];\n});\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["C:/Users/ayad/Desktop/NW/todo-app/react-front/src/components/home/form.tsx"],"names":["React","useState","Styles","useDispatch","TodoForm","title","setTitle","description","setDescription","dispatch","onChange","event","currentTarget","name","value","onSubmit","preventDefault","type","payload","AddIcon"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAmCC,QAAnC,QAAmD,OAAnD;AACA,OAAOC,MAAP,MAAmB,eAAnB;;AAGA,SAASC,WAAT,QAA4B,aAA5B;;AAMA,MAAMC,QAAkC,GAAG,MAAM;AAAA;;AAC/C,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAS,EAAT,CAAlC;AACA,QAAM,CAACM,WAAD,EAAcC,cAAd,IAAgCP,QAAQ,CAAS,EAAT,CAA9C;AAEA,QAAMQ,QAAQ,GAAGN,WAAW,EAA5B;;AAEA,QAAMO,QAAQ,GACZC,KADe,IAEZ;AACHA,IAAAA,KAAK,CAACC,aAAN,CAAoBC,IAApB,KAA6B,OAA7B,GACIP,QAAQ,CAACK,KAAK,CAACC,aAAN,CAAoBE,KAArB,CADZ,GAEIN,cAAc,CAACG,KAAK,CAACC,aAAN,CAAoBE,KAArB,CAFlB;AAGD,GAND;;AAQA,QAAMC,QAAQ,GAAIJ,KAAD,IAA6C;AAC5DA,IAAAA,KAAK,CAACK,cAAN;AACAP,IAAAA,QAAQ,CAAC;AAAEQ,MAAAA,IAAI,EAAE,iBAAR;AAA2BC,MAAAA,OAAO,EAAE;AAAEb,QAAAA,KAAF;AAASE,QAAAA;AAAT;AAApC,KAAD,CAAR;AACAD,IAAAA,QAAQ,CAAC,EAAD,CAAR;AACAE,IAAAA,cAAc,CAAC,EAAD,CAAd;AACD,GALD;;AAOA,sBACE,QAAC,MAAD,CAAQ,IAAR,CAAa,SAAb;AAAuB,IAAA,MAAM,EAAC,MAA9B;AAAqC,IAAA,QAAQ,EAAGG,KAAD,IAAWI,QAAQ,CAACJ,KAAD,CAAlE;AAAA,4BACE,QAAC,MAAD,CAAQ,IAAR,CAAa,UAAb;AACE,MAAA,IAAI,EAAC,OADP;AAEE,MAAA,WAAW,EAAC,OAFd;AAGE,MAAA,KAAK,EAAEN,KAHT;AAIE,MAAA,QAAQ,MAJV;AAKE,MAAA,QAAQ,EAAGM,KAAD,IAAWD,QAAQ,CAACC,KAAD;AAL/B;AAAA;AAAA;AAAA;AAAA,YADF,eAQE,QAAC,MAAD,CAAQ,IAAR,CAAa,gBAAb;AACE,MAAA,IAAI,EAAC,aADP;AAEE,MAAA,WAAW,EAAC,aAFd;AAGE,MAAA,KAAK,EAAEJ,WAHT;AAIE,MAAA,QAAQ,EAAGI,KAAD,IAAWD,QAAQ,CAACC,KAAD;AAJ/B;AAAA;AAAA;AAAA;AAAA,YARF,eAcE,QAAC,MAAD,CAAQ,IAAR,CAAa,MAAb;AAAoB,MAAA,IAAI,EAAC,QAAzB;AAAA,8BACE,QAAC,MAAD,CAAQ,IAAR,CAAa,IAAb;AAAkB,QAAA,GAAG,EAAEQ,OAAvB;AAAgC,QAAA,GAAG,EAAC;AAApC;AAAA;AAAA;AAAA;AAAA,cADF;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD,CA1CD;;GAAMf,Q;UAIaD,W;;;KAJbC,Q;AA4CN,eAAeA,QAAf","sourcesContent":["import React, { FunctionComponent, useState } from \"react\";\r\nimport Styles from \"./home.styles\";\r\nimport AddIcon from \"../../assets/images/add.svg\";\r\nimport { TodoProps } from \"../common/todo/todo\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\ninterface Props {\r\n  addTodo?(todo: TodoProps): void;\r\n}\r\n\r\nconst TodoForm: FunctionComponent<Props> = () => {\r\n  const [title, setTitle] = useState<string>(\"\");\r\n  const [description, setDescription] = useState<string>(\"\");\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const onChange = (\r\n    event: React.FormEvent<HTMLInputElement | HTMLTextAreaElement>\r\n  ) => {\r\n    event.currentTarget.name === \"title\"\r\n      ? setTitle(event.currentTarget.value)\r\n      : setDescription(event.currentTarget.value);\r\n  };\r\n\r\n  const onSubmit = (event: React.FormEvent<HTMLFormElement>) => {\r\n    event.preventDefault();\r\n    dispatch({ type: \"todos/todoAdded\", payload: { title, description } });\r\n    setTitle(\"\");\r\n    setDescription(\"\");\r\n  };\r\n\r\n  return (\r\n    <Styles.Form.Container method=\"post\" onSubmit={(event) => onSubmit(event)}>\r\n      <Styles.Form.TitleInput\r\n        name=\"title\"\r\n        placeholder=\"Title\"\r\n        value={title}\r\n        required\r\n        onChange={(event) => onChange(event)}\r\n      />\r\n      <Styles.Form.DescriptionInput\r\n        name=\"description\"\r\n        placeholder=\"Description\"\r\n        value={description}\r\n        onChange={(event) => onChange(event)}\r\n      />\r\n      <Styles.Form.Button type=\"submit\">\r\n        <Styles.Form.Icon src={AddIcon} alt=\"Ajouter\" />\r\n        Ajouter\r\n      </Styles.Form.Button>\r\n    </Styles.Form.Container>\r\n  );\r\n};\r\n\r\nexport default TodoForm;\r\n"]},"metadata":{},"sourceType":"module"}