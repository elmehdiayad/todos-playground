{"ast":null,"code":"import { takeLatest, call, put } from \"redux-saga/effects\";\nimport axios from \"axios\"; // watcher saga: watches for actions dispatched to the store, starts worker saga\n\nexport function* watcherSaga() {\n  yield takeLatest(\"API_CALL_REQUEST\", workerSaga);\n} // function that makes the api request and returns a Promise for response\n\nfunction fetchTodos() {\n  return axios({\n    method: \"get\",\n    url: \"https://localhost:8080/todos\"\n  });\n} // worker saga: makes the api call when watcher saga sees the action\n\n\nfunction* workerSaga() {\n  try {\n    const response = yield call(fetchTodos);\n    const todos = response.data.message; // dispatch a success action to the store with the new todo\n\n    yield put({\n      type: \"todos/getTodos\",\n      todos\n    });\n  } catch (error) {\n    // dispatch a failure action to the store with the error\n    yield put({\n      type: \"todos/error\",\n      error\n    });\n  }\n}","map":{"version":3,"sources":["C:/Users/ayad/Desktop/NW/todo-app/react-front/src/sagas.tsx"],"names":["takeLatest","call","put","axios","watcherSaga","workerSaga","fetchTodos","method","url","response","todos","data","message","type","error"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AACA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,UAAUC,WAAV,GAAwB;AAC7B,QAAMJ,UAAU,CAAC,kBAAD,EAAqBK,UAArB,CAAhB;AACD,C,CAED;;AACA,SAASC,UAAT,GAAsB;AACpB,SAAOH,KAAK,CAAC;AACXI,IAAAA,MAAM,EAAE,KADG;AAEXC,IAAAA,GAAG,EAAE;AAFM,GAAD,CAAZ;AAID,C,CAED;;;AACA,UAAUH,UAAV,GAAuB;AACrB,MAAI;AACF,UAAMI,QAAQ,GAAG,MAAMR,IAAI,CAACK,UAAD,CAA3B;AACA,UAAMI,KAAK,GAAGD,QAAQ,CAACE,IAAT,CAAcC,OAA5B,CAFE,CAGF;;AACA,UAAMV,GAAG,CAAC;AAAEW,MAAAA,IAAI,EAAE,gBAAR;AAA0BH,MAAAA;AAA1B,KAAD,CAAT;AACD,GALD,CAKE,OAAOI,KAAP,EAAc;AACd;AACA,UAAMZ,GAAG,CAAC;AAAEW,MAAAA,IAAI,EAAE,aAAR;AAAuBC,MAAAA;AAAvB,KAAD,CAAT;AACD;AACF","sourcesContent":["import { takeLatest, call, put } from \"redux-saga/effects\";\r\nimport axios from \"axios\";\r\n\r\n// watcher saga: watches for actions dispatched to the store, starts worker saga\r\nexport function* watcherSaga() {\r\n  yield takeLatest(\"API_CALL_REQUEST\", workerSaga);\r\n}\r\n\r\n// function that makes the api request and returns a Promise for response\r\nfunction fetchTodos() {\r\n  return axios({\r\n    method: \"get\",\r\n    url: \"https://localhost:8080/todos\",\r\n  });\r\n}\r\n\r\n// worker saga: makes the api call when watcher saga sees the action\r\nfunction* workerSaga() {\r\n  try {\r\n    const response = yield call(fetchTodos);\r\n    const todos = response.data.message;\r\n    // dispatch a success action to the store with the new todo\r\n    yield put({ type: \"todos/getTodos\", todos });\r\n  } catch (error) {\r\n    // dispatch a failure action to the store with the error\r\n    yield put({ type: \"todos/error\", error });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}