{"ast":null,"code":"import { takeLatest, call, put } from \"redux-saga/effects\";\nimport axios from \"axios\"; // watcher saga: watches for actions dispatched to the store, starts worker saga\n\nexport function* watcherSaga() {\n  yield takeLatest(\"todos/fetchTodos\", all);\n  yield takeLatest(\"todos/addTodo\", newTodo);\n  yield takeLatest(\"todos/todoCompleted\", completeTodo);\n} // function that makes the api request and returns a Promise for response\n\nfunction fetchTodos() {\n  return axios({\n    method: \"get\",\n    url: \"http://localhost:8080/todos\"\n  });\n}\n\nfunction addTodo(action) {\n  return axios({\n    method: \"post\",\n    url: \"http://localhost:8080/todos\",\n    data: {\n      title: action.payload.title,\n      description: action.payload.description,\n      completed: false,\n      deleted: false\n    }\n  });\n}\n\nfunction updateTodo(action) {\n  return axios({\n    method: \"post\",\n    url: \"http://localhost:8080/todos/complete/\" + action.payload.id\n  });\n} // worker saga: makes the api call when watcher saga sees the action\n\n\nfunction* all() {\n  try {\n    const response = yield call(fetchTodos);\n    const todos = response.data; // dispatch a success action to the store with the new todo\n\n    yield put({\n      type: \"todos/getTodos\",\n      payload: {\n        todos\n      }\n    });\n  } catch (error) {\n    console.log(error); // dispatch a failure action to the store with the error\n\n    yield put({\n      type: \"todos/error\",\n      error\n    });\n  }\n}\n\nfunction* newTodo(action) {\n  try {\n    yield call(addTodo, action); // dispatch a success action to the store with the new todo\n\n    yield put({\n      type: \"todos/fetchTodos\"\n    });\n  } catch (error) {\n    console.log(error); // dispatch a failure action to the store with the error\n\n    yield put({\n      type: \"todos/error\",\n      error\n    });\n  }\n}\n\nfunction* completeTodo(action) {\n  try {\n    yield call(updateTodo, action); // dispatch a success action to the store with the new todo\n\n    yield put({\n      type: \"todos/fetchTodos\"\n    });\n  } catch (error) {\n    console.log(error); // dispatch a failure action to the store with the error\n\n    yield put({\n      type: \"todos/error\",\n      error\n    });\n  }\n}","map":{"version":3,"sources":["C:/Users/ayad/Desktop/NW/todo-app/react-front/src/sagas.tsx"],"names":["takeLatest","call","put","axios","watcherSaga","all","newTodo","completeTodo","fetchTodos","method","url","addTodo","action","data","title","payload","description","completed","deleted","updateTodo","id","response","todos","type","error","console","log"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,oBAAtC;AAEA,OAAOC,KAAP,MAAkB,OAAlB,C,CAEA;;AACA,OAAO,UAAUC,WAAV,GAAwB;AAC7B,QAAMJ,UAAU,CAAC,kBAAD,EAAqBK,GAArB,CAAhB;AACA,QAAML,UAAU,CAAC,eAAD,EAAkBM,OAAlB,CAAhB;AACA,QAAMN,UAAU,CAAC,qBAAD,EAAwBO,YAAxB,CAAhB;AACD,C,CAED;;AACA,SAASC,UAAT,GAAsB;AACpB,SAAOL,KAAK,CAAC;AACXM,IAAAA,MAAM,EAAE,KADG;AAEXC,IAAAA,GAAG,EAAE;AAFM,GAAD,CAAZ;AAID;;AAED,SAASC,OAAT,CAAiBC,MAAjB,EAAqC;AACnC,SAAOT,KAAK,CAAC;AACXM,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,GAAG,EAAE,6BAFM;AAGXG,IAAAA,IAAI,EAAE;AACJC,MAAAA,KAAK,EAAEF,MAAM,CAACG,OAAP,CAAeD,KADlB;AAEJE,MAAAA,WAAW,EAAEJ,MAAM,CAACG,OAAP,CAAeC,WAFxB;AAGJC,MAAAA,SAAS,EAAE,KAHP;AAIJC,MAAAA,OAAO,EAAE;AAJL;AAHK,GAAD,CAAZ;AAUD;;AAED,SAASC,UAAT,CAAoBP,MAApB,EAAwC;AACtC,SAAOT,KAAK,CAAC;AACXM,IAAAA,MAAM,EAAE,MADG;AAEXC,IAAAA,GAAG,EAAE,0CAA0CE,MAAM,CAACG,OAAP,CAAeK;AAFnD,GAAD,CAAZ;AAID,C,CAED;;;AACA,UAAUf,GAAV,GAAgB;AACd,MAAI;AACF,UAAMgB,QAAQ,GAAG,MAAMpB,IAAI,CAACO,UAAD,CAA3B;AACA,UAAMc,KAAK,GAAGD,QAAQ,CAACR,IAAvB,CAFE,CAGF;;AACA,UAAMX,GAAG,CAAC;AAAEqB,MAAAA,IAAI,EAAE,gBAAR;AAA0BR,MAAAA,OAAO,EAAE;AAAEO,QAAAA;AAAF;AAAnC,KAAD,CAAT;AACD,GALD,CAKE,OAAOE,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EADc,CAEd;;AACA,UAAMtB,GAAG,CAAC;AAAEqB,MAAAA,IAAI,EAAE,aAAR;AAAuBC,MAAAA;AAAvB,KAAD,CAAT;AACD;AACF;;AAED,UAAUlB,OAAV,CAAkBM,MAAlB,EAAsC;AACpC,MAAI;AACF,UAAMX,IAAI,CAACU,OAAD,EAAUC,MAAV,CAAV,CADE,CAEF;;AACA,UAAMV,GAAG,CAAC;AAAEqB,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAT;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EADc,CAEd;;AACA,UAAMtB,GAAG,CAAC;AAAEqB,MAAAA,IAAI,EAAE,aAAR;AAAuBC,MAAAA;AAAvB,KAAD,CAAT;AACD;AACF;;AAED,UAAUjB,YAAV,CAAuBK,MAAvB,EAA2C;AACzC,MAAI;AACF,UAAMX,IAAI,CAACkB,UAAD,EAAaP,MAAb,CAAV,CADE,CAEF;;AACA,UAAMV,GAAG,CAAC;AAAEqB,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAT;AACD,GAJD,CAIE,OAAOC,KAAP,EAAc;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAZ,EADc,CAEd;;AACA,UAAMtB,GAAG,CAAC;AAAEqB,MAAAA,IAAI,EAAE,aAAR;AAAuBC,MAAAA;AAAvB,KAAD,CAAT;AACD;AACF","sourcesContent":["import { takeLatest, call, put } from \"redux-saga/effects\";\r\nimport { TodoAction } from \"./components/todos/todos.slice\";\r\nimport axios from \"axios\";\r\n\r\n// watcher saga: watches for actions dispatched to the store, starts worker saga\r\nexport function* watcherSaga() {\r\n  yield takeLatest(\"todos/fetchTodos\", all);\r\n  yield takeLatest(\"todos/addTodo\", newTodo);\r\n  yield takeLatest(\"todos/todoCompleted\", completeTodo);\r\n}\r\n\r\n// function that makes the api request and returns a Promise for response\r\nfunction fetchTodos() {\r\n  return axios({\r\n    method: \"get\",\r\n    url: \"http://localhost:8080/todos\",\r\n  });\r\n}\r\n\r\nfunction addTodo(action: TodoAction) {\r\n  return axios({\r\n    method: \"post\",\r\n    url: \"http://localhost:8080/todos\",\r\n    data: {\r\n      title: action.payload.title,\r\n      description: action.payload.description,\r\n      completed: false,\r\n      deleted: false,\r\n    },\r\n  });\r\n}\r\n\r\nfunction updateTodo(action: TodoAction) {\r\n  return axios({\r\n    method: \"post\",\r\n    url: \"http://localhost:8080/todos/complete/\" + action.payload.id,\r\n  });\r\n}\r\n\r\n// worker saga: makes the api call when watcher saga sees the action\r\nfunction* all() {\r\n  try {\r\n    const response = yield call(fetchTodos);\r\n    const todos = response.data;\r\n    // dispatch a success action to the store with the new todo\r\n    yield put({ type: \"todos/getTodos\", payload: { todos } });\r\n  } catch (error) {\r\n    console.log(error);\r\n    // dispatch a failure action to the store with the error\r\n    yield put({ type: \"todos/error\", error });\r\n  }\r\n}\r\n\r\nfunction* newTodo(action: TodoAction) {\r\n  try {\r\n    yield call(addTodo, action);\r\n    // dispatch a success action to the store with the new todo\r\n    yield put({ type: \"todos/fetchTodos\" });\r\n  } catch (error) {\r\n    console.log(error);\r\n    // dispatch a failure action to the store with the error\r\n    yield put({ type: \"todos/error\", error });\r\n  }\r\n}\r\n\r\nfunction* completeTodo(action: TodoAction) {\r\n  try {\r\n    yield call(updateTodo, action);\r\n    // dispatch a success action to the store with the new todo\r\n    yield put({ type: \"todos/fetchTodos\" });\r\n  } catch (error) {\r\n    console.log(error);\r\n    // dispatch a failure action to the store with the error\r\n    yield put({ type: \"todos/error\", error });\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}